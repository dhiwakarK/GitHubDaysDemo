name: .NET Release

on:
  workflow_run:
    workflows: [.NET Build and Deploy]
    types:
      - completed

env:
  AZURE_WEBAPP_NAME: InfyGitHubDayDemo    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: 'GitHubDaysDemo.zip'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '7'                 # set this to the .NET Core version to use
  ARTIFACT_NAME: 'GitHubDaysDemo'

jobs:
  deploy-qa:
    runs-on: ubuntu-latest
    environment:
      name: 'QA'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "GitHubDaysDemo"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/${process.env.ARTIFACT_NAME}.zip`, Buffer.from(download.data));

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_QA }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
